#' df_wide <- export_dataframe("gii", iots)
#' df_long <- export_dataframe("gii", iots, long = TRUE)
#'
#' @export
export_dataframe <- function(measures, iots, years = NULL, long = FALSE){
# Start empty list to make into dataframe in the end
df_list = list()
if (!is.null(years)){
iots_new = list()
for (year in years){
iots_new[[paste("iot", toString(year), sep = "")]] <- iots[[paste("iot", toString(year), sep = "")]]
}
iots <- iots_new
}
# Find the description of the data
# Use first element of measures for this.
# Get the description from the first IOT in list that contains it.
name_descr = paste(measures[1], "_descr", sep = "")
notfound = T
i = 1
while (notfound){
if (!is.null(iots[[i]][[name_descr]])){
# if description found, add description to the list
descr <- iots[[i]][[name_descr]]
notfound = F
}
else {
# if description not in list, add one to counter
i = i + 1
}
if (i > length(iots)){
# Ends loop if all IOTs in list are checked.
descr = NULL
notfound = F
}
if (i >= 1000){
# Ends loop after 1000 iterations. In that case something went wrong.
print("Something went wrong. More than 1000 iterations have occured to find description.")
print("Check whether function is correctly specified")
notfound = F
}
}
# Go through all measures and years to add the data to the list
if (!is.null(descr)){
df_list <- list(descr)
}
for (measure in measures){
for (i in 1:length(iots)){
# If a measure has only one column, the naming of that column is included.
# Otherwise, the naming of the original columns is incorporated
# into the new column names
if (!is.null(iots[[i]][[measure]])){
dim_object <- dim(iots[[i]][[measure]])
if (is.null(dim_object)){
dim_col <- 1
}
else{
dim_col <- dim_object[2]
}
if (dim_col == 1){
# Find year of data and make column name
year = iots[[i]]$year
name_col <- paste(measure, toString(year), sep = "")
# Add data to list
df_list[[name_col]] = iots[[i]][[measure]]
}
if (dim_col > 1){
# Check whether column names are given to data.
# If not, create names with column position
year = iots[[i]]$year
if (is.null(colnames(iots[[i]][[measure]]))){
for (j in 1:ncol(iots[[i]][[measure]])){
name_col <- paste(measure,"_", toString(j) , toString(year), sep = "")
df_list[[name_col]] = iots[[i]][[measure]][,j]
}
}
# Otherwise, create names using the given column names
else{
colname_vec = colnames(iots[[i]][[measure]]) # Find column names
colname_vec[is.na(colname_vec)] = which(is.na(colname_vec)) # Replace NA values
colname_vec[is.nan(colname_vec)] = which(is.nan(colname_vec)) # Replace NaN
colname_vec <- make.names(colnames(iots[[i]][[measure]]), unique = TRUE) # Make sure names are unique
for (j in 1:ncol(iots[[i]][[measure]])){
name_col <- paste(measure,"_", colname_vec[j] , toString(year), sep = "")
df_list[[name_col]] = iots[[i]][[measure]][,j]
}
}
}
}
}
}
# Combine list into a dataframe
df <- do.call(cbind.data.frame, df_list)
if (long == TRUE){
extra = list()
if (!is.null(descr)){
df_long <- gather(df, key = "variable", value = "value", -c(colnames(descr)[]))
}
if (is.null(descr)){
df_long <- gather(df, key = "variable", value = "value")
}
extra$year <- substr(df_long$variable, start = (nchar(df_long$variable) - 3), stop = nchar(df_long$variable))
extra$var <- substr(df_long$variable, start = 1, stop = nchar(df_long$variable) - 4)
extra_df <-   do.call(cbind.data.frame, extra)
df_long$variable <- NULL
df_long <- cbind(df_long, extra_df)
df <- spread(df_long, "var", "value")
df$year <- as.numeric(levels(df$year))
}
return(df)
}
df_bfs_rd <- export_dataframe(c("bfs_rd"), iots, years = 2011)
bfs_deu <- t(df_bfs_rd[df_bfs_rd$Country == "DEU",])
df_bfs_mgt <- export_dataframe(c("bfs_mgt"), iots, years = 2011)
bfs_deu <- cbind(bfs_deu, t(df_bfs_mgt[df_bfs_mgt$Country == "DEU",]))
df_bfs_mar <- export_dataframe(c("bfs_mar"), iots, years = 2011)
bfs_deu <- cbind(bfs_deu, t(df_bfs_mar[df_bfs_mar$Country == "DEU",]))
df_bfs_fab <- export_dataframe(c("bfs_fab"), iots, years = 2011)
bfs_deu <- cbind(bfs_deu, t(df_bfs_fab[df_bfs_fab$Country == "DEU",]))
bfs_deu <- bfs_deu[2:42,]
rownames(bfs_deu) <- iots$iot1995$countries
colnames(bfs_deu) <- c("rd", "mgt", "mar", "fab")
# China
bfs_chn <- t(df_bfs_rd[df_bfs_rd$Country == "CHN",])
bfs_chn <- cbind(bfs_chn, t(df_bfs_mgt[df_bfs_mgt$Country == "CHN",]))
bfs_chn <- cbind(bfs_chn, t(df_bfs_mar[df_bfs_mar$Country == "CHN",]))
bfs_chn <- cbind(bfs_chn, t(df_bfs_fab[df_bfs_fab$Country == "CHN",]))
bfs_chn <- bfs_chn[2:42,]
rownames(bfs_chn) <- iots$iot1995$countries
colnames(bfs_chn) <- c("rd", "mgt", "mar", "fab")
df_bfs_rd <- export_dataframe(c("bfs_rd"), iots, years = 2011)
bfs_deu <- t(df_bfs_rd[df_bfs_rd$Country == "DEU",])
bfs_deu <- t(df_bfs_rd[df_bfs_rd$Country == "DEU",])
View(iots)
View(df_bfs_fab)
df_bfs_rd <- export_dataframe(c("bfs_rd"), iots, years = 2011)
bfs_deu <- t(df_bfs_rd[df_bfs_rd$Country == "DEU",])
df_bfs_mgt <- export_dataframe(c("bfs_mgt"), iots, years = 2011)
bfs_deu <- cbind(bfs_deu, t(df_bfs_mgt[df_bfs_mgt$Country == "DEU",]))
df_bfs_mar <- export_dataframe(c("bfs_mar"), iots, years = 2011)
bfs_deu <- cbind(bfs_deu, t(df_bfs_mar[df_bfs_mar$Country == "DEU",]))
df_bfs_fab <- export_dataframe(c("bfs_fab"), iots, years = 2011)
bfs_deu <- cbind(bfs_deu, t(df_bfs_fab[df_bfs_fab$Country == "DEU",]))
View(bfs_chn)
df_bfs_rd <- export_dataframe(c("bfs_rd"), iots, years = 2011)
bfs_deu <- t(df_bfs_rd[df_bfs_rd$country == "DEU",])
# Germany
df_bfs_rd <- export_dataframe(c("bfs_rd"), iots, years = 2011)
bfs_deu <- t(df_bfs_rd[df_bfs_rd$country == "DEU",])
df_bfs_mgt <- export_dataframe(c("bfs_mgt"), iots, years = 2011)
bfs_deu <- cbind(bfs_deu, t(df_bfs_mgt[df_bfs_mgt$country == "DEU",]))
df_bfs_mar <- export_dataframe(c("bfs_mar"), iots, years = 2011)
bfs_deu <- cbind(bfs_deu, t(df_bfs_mar[df_bfs_mar$country == "DEU",]))
df_bfs_fab <- export_dataframe(c("bfs_fab"), iots, years = 2011)
bfs_deu <- cbind(bfs_deu, t(df_bfs_fab[df_bfs_fab$country == "DEU",]))
bfs_deu <- bfs_deu[2:42,]
rownames(bfs_deu) <- iots$iot1995$countries
colnames(bfs_deu) <- c("rd", "mgt", "mar", "fab")
# China
bfs_chn <- t(df_bfs_rd[df_bfs_rd$Country == "CHN",])
bfs_chn <- cbind(bfs_chn, t(df_bfs_mgt[df_bfs_mgt$country == "CHN",]))
bfs_chn <- cbind(bfs_chn, t(df_bfs_mar[df_bfs_mar$country == "CHN",]))
bfs_chn <- cbind(bfs_chn, t(df_bfs_fab[df_bfs_fab$country == "CHN",]))
# Germany
df_bfs_rd <- export_dataframe(c("bfs_rd"), iots, years = 2011)
bfs_deu <- t(df_bfs_rd[df_bfs_rd$country == "DEU",])
df_bfs_mgt <- export_dataframe(c("bfs_mgt"), iots, years = 2011)
bfs_deu <- cbind(bfs_deu, t(df_bfs_mgt[df_bfs_mgt$country == "DEU",]))
df_bfs_mar <- export_dataframe(c("bfs_mar"), iots, years = 2011)
bfs_deu <- cbind(bfs_deu, t(df_bfs_mar[df_bfs_mar$country == "DEU",]))
df_bfs_fab <- export_dataframe(c("bfs_fab"), iots, years = 2011)
bfs_deu <- cbind(bfs_deu, t(df_bfs_fab[df_bfs_fab$country == "DEU",]))
bfs_deu <- bfs_deu[2:42,]
rownames(bfs_deu) <- iots$iot1995$countries
colnames(bfs_deu) <- c("rd", "mgt", "mar", "fab")
# China
bfs_chn <- t(df_bfs_rd[df_bfs_rd$Country == "CHN",])
bfs_chn <- cbind(bfs_chn, t(df_bfs_mgt[df_bfs_mgt$country == "CHN",]))
bfs_chn <- cbind(bfs_chn, t(df_bfs_mar[df_bfs_mar$country == "CHN",]))
bfs_chn <- cbind(bfs_chn, t(df_bfs_fab[df_bfs_fab$country == "CHN",]))
bfs_chn <- bfs_chn[2:42,]
rownames(bfs_chn) <- iots$iot1995$countries
colnames(bfs_chn) <- c("rd", "mgt", "mar", "fab")
bfs_chn <- t(df_bfs_rd[df_bfs_rd$Country == "CHN",])
# Table A2
# Germany
df_bfs_rd <- export_dataframe(c("bfs_rd"), iots, years = 2011)
bfs_deu <- t(df_bfs_rd[df_bfs_rd$country == "DEU",])
df_bfs_mgt <- export_dataframe(c("bfs_mgt"), iots, years = 2011)
bfs_deu <- cbind(bfs_deu, t(df_bfs_mgt[df_bfs_mgt$country == "DEU",]))
df_bfs_mar <- export_dataframe(c("bfs_mar"), iots, years = 2011)
bfs_deu <- cbind(bfs_deu, t(df_bfs_mar[df_bfs_mar$country == "DEU",]))
df_bfs_fab <- export_dataframe(c("bfs_fab"), iots, years = 2011)
bfs_deu <- cbind(bfs_deu, t(df_bfs_fab[df_bfs_fab$country == "DEU",]))
bfs_deu <- bfs_deu[2:42,]
rownames(bfs_deu) <- iots$iot1995$countries
colnames(bfs_deu) <- c("rd", "mgt", "mar", "fab")
# China
bfs_chn <- t(df_bfs_rd[df_bfs_rd$country == "CHN",])
bfs_chn <- cbind(bfs_chn, t(df_bfs_mgt[df_bfs_mgt$country == "CHN",]))
bfs_chn <- cbind(bfs_chn, t(df_bfs_mar[df_bfs_mar$country == "CHN",]))
bfs_chn <- cbind(bfs_chn, t(df_bfs_fab[df_bfs_fab$country == "CHN",]))
bfs_chn <- bfs_chn[2:42,]
rownames(bfs_chn) <- iots$iot1995$countries
colnames(bfs_chn) <- c("rd", "mgt", "mar", "fab")
install.packages("WIOD_0.1.tar.gz", repos = NULL)
# Install WIOD package if necessary via following command:
# install.packages( , repos =NULL)
library(WIOD)
# Load Data
iots <- load_iots("WIOD2013")
iots <- load_extra_iots(iots, "joeg2019")
# Make Calculations
# Standard
iots <- on_iots(func_spec, iots)
# Bilateral
iots <- on_iots(func_spec, iots, bilateral = TRUE)
# Advanced countries aggregated
advanced <- c("AUS", "AUT", "BEL", "CAN", "DNK", "FIN", "FRA", "DEU", "GRC", "IRL",
"ITA", "JPN", "LUX", "NLD", "PRT", "KOR", "ESP", "SWE", "TWN", "GBR", "USA")
adv_aggr <- countrycat(list(advanced), iots)
adv_aggr[adv_aggr == 2] <- 0
iots <- on_iots(func_spec, iots, aggregation = adv_aggr)
# Figure 1: functional specialization advanced countries
df_fs_aggr <- export_dataframe(c("fs_mgt_aggr", "fs_rd_aggr", "fs_mar_aggr", "fs_fab_aggr"), iots, long = T)
attach(df_fs_aggr)
plot(year,fs_fab_aggr, type = "l", ylim = c(0.80,1.2), xlab = "Year", ylab = "FS Index", title = "Figure 1")
text(2000, 0.91, labels = "Fabrication")
lines(year,fs_mar_aggr, lty = 2)
text(2000, 1.06, labels = "Marketing")
lines(year,fs_mgt_aggr, lty = 3)
text(2000, 1.008, labels = "Management")
lines(year,fs_rd_aggr, lty = 4)
text(2000.5, 1.115, labels = "Research and Development")
abline(1,0, col = "red")
detach(df_fs_aggr)
# Figure 2:  functional specialization China
df_fs <- export_dataframe(c("fs_mgt", "fs_rd", "fs_mar", "fs_fab"), iots, long = T)
attach(df_fs)
plot(year[Country == "CHN"],fs_fab[Country == "CHN"], type = "l", ylim = c(0,2), xlab = "Year", ylab = "FS Index", title = "Figure 2")
text(2000, 1.8, labels = "Fabrication")
lines(year[Country == "CHN"],fs_mar[Country == "CHN"], lty = 2)
text(2000, 0.9, labels = "Marketing")
lines(year[Country == "CHN"],fs_mgt[Country == "CHN"], lty = 3)
text(2000, 0.45, labels = "Management")
lines(year[Country == "CHN"],fs_rd[Country == "CHN"], lty = 4)
text(2000.5, 0.2, labels = "Research and Development")
abline(1,0, col = "red")
detach(df_fs)
# Figure 3
# Load Penn World Table Data
library(readxl)
url <- "https://www.rug.nl/ggdc/docs/pwt81.xlsx"
destfile <- "pwt91.xlsx"
curl::curl_download(url, destfile)
pwt <- read_excel(destfile)
pwt_keep <- pwt[,c("countrycode","year", "rgdpe", "pop")]
colnames(pwt_keep)[colnames(pwt91_keep) == "countrycode"] <- "Country"
pwt_keep$gdp_cap <- pwt_keep$rgdpe / pwt_keep$pop
# Merge with functional specialization data
df_merge <- merge(df_fs, pwt_keep, by = c("Country", "year"))
# Make Figures
attach(df_merge)
# Figure 3a: R&D
plot(gdp_cap[(year == 2011) & (Country != "LUX")], fs_rd[(year == 2011)& (Country != "LUX")],
main = "Figure 3a: R&D", xlab = "GDP per capita (in 2011US$)", ylab = "FS Index in R&D activities")
text(fs_rd[year == 2011]~gdp_cap[year == 2011], labels=Country[year == 2011],data=df_merge, pos = 4)
abline(1,0)
abline(lm(fs_rd[(year == 2011)& (Country != "LUX")]~gdp_cap[(year == 2011) & (Country != "LUX")]), lty = 2)
text(48000, 1.6, paste("Corr:", toString(round(cor(gdp_cap[(year == 2011) & (Country != "LUX")], fs_mar[(year == 2011)& (Country != "LUX")]), digits = 3))))
# Figure 3b: Marketing
plot(gdp_cap[(year == 2011) & (Country != "LUX")], fs_mar[(year == 2011)& (Country != "LUX")],
main = "Figure 3b: Marketing", xlab = "GDP per capita (in 2011US$)", ylab = "FS Index in Marketing activities")
text(fs_mar[year == 2011]~gdp_cap[year == 2011], labels=Country[year == 2011],data=df_merge, pos = 4)
abline(1,0)
abline(lm(fs_mar[(year == 2011)& (Country != "LUX")]~gdp_cap[(year == 2011) & (Country != "LUX")]), lty = 2)
text(48000, 1.3, paste("Corr:", toString(round(cor(gdp_cap[(year == 2011) & (Country != "LUX")], fs_mar[(year == 2011)& (Country != "LUX")]), digits = 3))))
# Figure 3c: Management
plot(gdp_cap[(year == 2011) & (Country != "LUX")], fs_mgt[(year == 2011) & (Country != "LUX")],
main = "Figure 3c: Management", xlab = "GDP per capita (in 2011US$)", ylab = "FS Index in Management activities")
text(fs_mgt[year == 2011]~gdp_cap[year == 2011], labels=Country[year == 2011],data=df_merge, pos = 4)
abline(1,0)
abline(lm(fs_mgt[(year == 2011)& (Country != "LUX")]~gdp_cap[(year == 2011) & (Country != "LUX")]), lty = 2)
text(48000, 2.1, paste("Corr:", toString(round(cor(gdp_cap[(year == 2011) & (Country != "LUX")], fs_mgt[(year == 2011)& (Country != "LUX")]), digits = 3))))
# Figure 3d: Fabrication
plot(gdp_cap[(year == 2011 & (Country != "LUX"))], fs_fab[(year == 2011) & (Country != "LUX")],
main = "Figure 3d: Fabrication", xlab = "GDP per capita (in 2011US$)", ylab = "FS Index in Fabrication activities")
text(fs_fab[year == 2011]~gdp_cap[year == 2011], labels=Country[year == 2011],data=df_merge, pos = 4)
abline(1,0)
abline(lm(fs_fab[(year == 2011)& (Country != "LUX")]~gdp_cap[(year == 2011) & (Country != "LUX")]), lty = 2)
text(48000, 1.8, paste("Corr:", toString(round(cor(gdp_cap[(year == 2011) & (Country != "LUX")], fs_fab[(year == 2011)& (Country != "LUX")]), digits = 3))))
detach(df_merge)
# Table A1
# Extract data
df_fs_width <- export_dataframe(c("fs_mgt", "fs_rd", "fs_mar", "fs_fab"), iots, years = c(1999,2011))
# Classify data in specialization
df_fs_width$spec <- 0
#1. RD, 2. MGT, 3. MAR, 4. FAB
check <- df_fs_width$fs_rd2011
df_fs_width$spec[(check >= df_fs_width$fs_rd2011) & (check >= df_fs_width$fs_mgt2011)
& (check >= df_fs_width$fs_mar2011)  & (check >= df_fs_width$fs_fab2011)] <- 1
check <- df_fs_width$fs_mgt2011
df_fs_width$spec[(check >= df_fs_width$fs_rd2011) & (check >= df_fs_width$fs_mgt2011)
& (check >= df_fs_width$fs_mar2011) & (check >= df_fs_width$fs_fab2011)]  <- 2
check <- df_fs_width$fs_mar2011
df_fs_width$spec[(check >= df_fs_width$fs_rd2011) & (check >= df_fs_width$fs_mgt2011)
& (check >= df_fs_width$fs_mar2011) & (check >= df_fs_width$fs_fab2011)]  <- 3
check <- df_fs_width$fs_fab2011
df_fs_width$spec[(check >= df_fs_width$fs_rd2011) & (check >= df_fs_width$fs_mgt2011)
& (check >= df_fs_width$fs_mar2011) & (check >= df_fs_width$fs_fab2011)]  <- 4
# Order data
df_fs_width <- df_fs_width[order(df_fs_width$spec, df_fs_width$country),]
# Reshuffle variables
attach(df_fs_width)
tableA1 <- data.frame(country, fs_rd2011, fs_mgt2011, fs_mar2011, fs_fab2011, fs_rd1999, fs_mgt1999, fs_mar1999, fs_fab1999)
detach(df_fs_width)
# Table A2
# Germany
df_bfs_rd <- export_dataframe(c("bfs_rd"), iots, years = 2011)
bfs_deu <- t(df_bfs_rd[df_bfs_rd$country == "DEU",])
df_bfs_mgt <- export_dataframe(c("bfs_mgt"), iots, years = 2011)
bfs_deu <- cbind(bfs_deu, t(df_bfs_mgt[df_bfs_mgt$country == "DEU",]))
df_bfs_mar <- export_dataframe(c("bfs_mar"), iots, years = 2011)
bfs_deu <- cbind(bfs_deu, t(df_bfs_mar[df_bfs_mar$country == "DEU",]))
df_bfs_fab <- export_dataframe(c("bfs_fab"), iots, years = 2011)
bfs_deu <- cbind(bfs_deu, t(df_bfs_fab[df_bfs_fab$country == "DEU",]))
bfs_deu <- bfs_deu[2:42,]
rownames(bfs_deu) <- iots$iot1995$countries
colnames(bfs_deu) <- c("rd", "mgt", "mar", "fab")
# China
bfs_chn <- t(df_bfs_rd[df_bfs_rd$country == "CHN",])
bfs_chn <- cbind(bfs_chn, t(df_bfs_mgt[df_bfs_mgt$country == "CHN",]))
bfs_chn <- cbind(bfs_chn, t(df_bfs_mar[df_bfs_mar$country == "CHN",]))
bfs_chn <- cbind(bfs_chn, t(df_bfs_fab[df_bfs_fab$country == "CHN",]))
bfs_chn <- bfs_chn[2:42,]
rownames(bfs_chn) <- iots$iot1995$countries
colnames(bfs_chn) <- c("rd", "mgt", "mar", "fab")
library(WIOD)
iots <- load_iots("WIOD2016")
View(iots)
load_iot <- function(version, year, directory = get("dir_data", envir = paramEnv)){
dir_file = paste(directory, "\\", version, "\\", version, toString(year), ".rds", sep = "")
if (tolower(substr(dir_file, 1, 4)) == 'http' ){
if (url.exists(dir_file)){
if (is.na(curl_fetch_memory(dir_file)$type)){
#Website redirect wrong URLs without proper code
iot <- readRDS(gzcon(url(dir_file)))
return(iot)
}
else{
print("Requested data not found")
return(null)
}
}
}
else{
if (file.exists(dir_file)){
iot <- readRDS(dir_file)
return(iot)
}
else{
print("Requested data not found. Trying to download data now.")
download_iot(version, year, dir_data = directory)
if (file.exists(dir_file)){
print("Found, downloaded and added.")
iot <- readRDS(dir_file)
return(iot)
}
}
}
}
iot <- load_iot("WIOD2016", 2016)
library(WIOD)
iot <- load_iot("WIOD2016", 2016)
View(load_iot)
iot <- load_iot("WIOD2016", 2016)
library(WIOD)
iot <- load_iot("WIOD2016", 2016)
list(iot, "c")
library(WIOD)
iot <- load_iot("WIOD2016", 2016)
library(WIOD)
library(WIOD)
library(WIOD)
iot <- load_iot("WIOD2016", 2016)
iots <- load_iots("WIOD2016", 2009:2016)
View(iots)
library(WIOD)
iots <- load_iots("WIOD2016", 2009:2016)
iot <- load_iot("WIOD2016", 2005)
iot <- load_iot("WIOD2016", 2014)
change_dir_data("/Home/Documents")
iot <- load_iot("WIOD2016", 2014)
iot <- load_iot("WIOD2016", 2005)
setwd("~/Documents/Data WIOD")
change_dir_data(""~/Documents/Data WIOD"")
setwd("\~/Documents/Data WIOD")
setwd("/Documents/Data WIOD")
change_dir_data(~/Documents/Data WIOD")
change_dir_data("~/Documents/Data WIOD")
iot <- load_iot("WIOD2016", 2005)
iot <- load_iot2("WIOD2016", 2005)
iot <- load_iot2("WIOD2016", 2005)
iot <- load_iot2("WIOD2016", 2005)
library(WIOD)
iot <- load_iot2("WIOD2016", 2005)
change_dir_data("~/Documents/Data WIOD")
iot <- load_iot2("WIOD2016", 2005)
library(WIOD)
change_dir_data("~/Documents/Data WIOD")
iot <- load_iot2("WIOD2016", 2005)
iot <- load_iot2("WIOD2016", 2005)
library(WIOD)
source('~/Documents/WIOD_package/R/load_iots.R')
version_database = "WIOD2016"
dir_data_online =  get("dir_data_online", envir = paramEnv)
years_url <- paste(dir_data_online, "/", version_database, "/", version_database, "years", ".rds", sep = "")
library(WIOD)
change_dir_data("~/Documents/Data WIOD")
iots <- load_iots("WIOD2016")
iots <- load_iots2("WIOD2016")
library(WIOD)
change_dir_data("~/Documents/Data WIOD")
iots <- load_iots2("WIOD2016")
library(WIOD)
change_dir_data("~/Documents/Data WIOD")
iots <- load_iots2("WIOD2016")
View(load_iots)
iots <- load_iots2("WIOD2016")
reset_dir_data()
iots <- load_iots2("WIOD2016")
library(WIOD)
iots <- load_iots2("WIOD2016")
iots <- load_iots2("WIOD2016")
# Function to load multiple International Input Output Tables,
# within the same database into a list of input-output tables.
# Created by Sybren Deuzeman
# Maintained by GGDC
# First version: 3 May 2019
# Current Version: 7 September 2019
#' @title
#' Load a time-series of International Input-Output Table.
#'
#' @description
#' Function loads a time-series of internation Input-Output Tables (IOTs).
#'
#' @param version: version of IOTs
#' @param year: years for which you want the IOT. Default is all years.
#' @param directory: directory to where the input-output tables are stored. Most often preferable to change using change_dir_data().
#'
#' @details
#' Versions currently supported are WIOD2013 (World Input Output Database, version 2013),
#' WIOD2016 (World Input Output Database, version 2013)
#' and ICIOT (Inter-Country Input Output Tables, version 2018).
#'
#' If directory is changed using change_dir_data, the function will download the requested data prior to loading.
#' One can also download data using download_iots.
#'
#' @examples
#' \dontrun{Using online data:}
#' iots <- load_iots("WIOD2013")
#'
#' \dontrun{Using online data, only some years:}
#' iots <- load_iots("WIOD2013", 2000:2002)
#'
#' @examples
#' \dontrun{Using local data:
#' change_dir_data("D:/Data")
#' iots <- load_iots("WIOD2013")}
#'
#' @export
load_iots2 <- function(version_database, years = NULL, directory = get("dir_data", envir = paramEnv)){
# Function to load multiple International Input Output Tables within the same database into a list of input-output tables.
# version: version of IOT
# year: list or array of years
# directory: Directory to the data. Version and year are managed. Default is loading via the internet.
# In case of the default option for years (i.e. all years)
if (is.null(years)){
load_years(version_database, directory = get("dir_data", envir = paramEnv))
}
# Create actual list of international input output tables.
iots <- list()
for (year in years){
name = paste("iot", toString(year), sep = "")
iots[[name]] <- load_iot(version_database, year, directory)
}
return(iots)
}
library(WIOD)
iots <- load_iots2("WIOD2016")
library(WIOD)
iots <- load_iots2("WIOD2016")
library(WIOD)
iots <- load_iots2("WIOD2016")
library(WIOD)
iots <- load_iots2("WIOD2016")
library(WIOD)
iots <- load_iots2("WIOD2016", 2010:2016)
years = 3:5
"iot" + years
"iot" + tostring(years0
)
"iot" + tostring(years)
"iot" + toString(years)
library(WIOD)
install.packages("GDAL")
install.packages("rgdal")
library(rgdal)
install.packages("rgdal")
library(WIOD)
iot <- load_iot("WIOD2016", 2005)
View(iot)
