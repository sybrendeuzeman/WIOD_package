print("fvas")
fvas <- colSums(reg_vas) / colSums(fvas_g)
#iot$rfvas <- rfvas
iot$gfvas <- (gfvas)
iot$fvas <- (fvas)
iot$fvas_descr <- countryindustry_descr(iot, regions, industries)
iot$gfvas_descr <- countryindustry_descr(iot, regions, industries)
iot$rfvas_descr <- countryindustry_descr(iot, regions, industries)
return(iot)
}
iot <- fvas(iot)
iot <- fvas(iot)
#' @title Find Foreign and Regional Value Added Share
#' @description Calculates the foreign value added and regional value added shares as in
#' Bart Los, Marcel P Timmer, Gaaitzen J de Vries
#' How global are global value chains? A new approach to measure international fragmentation#'
#'
#' @param iot: List with elements in a Input-Output Table (load via [load_iot()])
#' @param regions: Vector with categorisation of countries.
#' @param industries: Vector with categorisation of industries.
#' @return The input-output table list with
#' the Foreign Value Added Share measure (fvas),
#' the Regional Foreign Value Added Share measure (rfvas),
#' and the Global Foreign Value Added Share measure (gfvas)
#' and a description of the countries and industries
#' (fvas_descr, rfvas_descr, gfvas_des) for use in [export_dataframe()].
#'
#' @details regions defines the regions that are used to calculate RFVAS.
#' If none selected, RFVAS will be equal to FVAS.
#'
#' Full reference:
#' Bart Los, Marcel P Timmer, Gaaitzen J de Vries, 2015,
#' How global are global value chains? A new approach to measure international fragmentation
#' Journal of Regional Science, volume 55, issue 1, pages 66-92
#'
#' @examples
#' iot <- load_iot("WIOD2013", 2000)
#' iot <- fvas(iot)
#'
#' iots <- load_iots("WIOD2013", 2000:2001)
#' NAFTA <- c("USA", "MEX", "CAN")
#' BENELUX <- c("BEL", "NLD", "LUX")
#' regions <- countrycat(list(NAFTA, BENELUX), iots)
#' primary <- c("AtB", "C")
#' transport <- c("60", "61", "62", "63")
#' industries <- industrycat(list(primary, transport), iots)
#'
#' iots <- on_iots(fvas, iots, regions = regions, industries = industries)
#' df_gii <- export_dataframe(c("fvas", rfvas, gfvas), iots)
#'
#' @export
fvas <- function(iot, regions = "None", industries = "None"){
iot <- fd_total(iot)
iot <- leontief(iot)
v_sh = iot$VA / iot$S
v_sh[is.nan(v_sh)] <- 0
first <- sweep(iot$L, MARGIN = 1, t(v_sh), '*')
fvas_g <- sweep(first, MARGIN = 2, iot$fd_total, '*')
if (regions == "None"){
region_list = rep(1, iot$c)
}
else{
region_list = regions
}
# Select such that domestic VA is excluded
select_c = matrix(1, iot$c, iot$c)
for (i in 1:iot$c){
select_c[i,i] = 0
}
select_n = matrix(1, iot$n, iot$n)
select = kronecker(select_c, select_n)
fvas_g_sel = fvas_g * select
# Make aggregation in different regions
c_mat = matrix(0, max(region_list),iot$c)
for (row in 1:max(region_list)){
c_mat[row, 1:iot$c] <- (region_list == row)
}
i_mat = matrix(1,1,iot$n)
aggr <- kronecker(c_mat, i_mat)
reg_vas <- aggr %*% fvas_g_sel
# Calculate different measures
iot$rfvas <- colSums(aggr * reg_vas) / colSums(fvas_g)
gfvas <- colSums((1-aggr) * reg_vas) / colSums(fvas_g)
fvas <- colSums(reg_vas) / colSums(fvas_g)
#iot$rfvas <- rfvas
iot$gfvas <- (gfvas)
iot$fvas <- (fvas)
iot$fvas_descr <- countryindustry_descr(iot, regions, industries)
iot$gfvas_descr <- countryindustry_descr(iot, regions, industries)
iot$rfvas_descr <- countryindustry_descr(iot, regions, industries)
return(iot)
}
iot <- fvas(iot)
library(WIOD)
run_examples(fresh = TRUE, run = FALSE)
iots <- load_iots("WIOD2013", 2000:2001)
NAFTA <- c("USA", "MEX", "CAN")
BENELUX <- c("BEL", "NLD", "LUX")
regions <- countrycat(list(NAFTA, BENELUX), iots)
primary <- c("AtB", "C")
transport <- c("60", "61", "62", "63")
industries <- industrycat(list(primary, transport), iots)
iots <- on_iots(gii, iots, regions = regions, industries = industries)
df_gii <- export_dataframe("gii", iots)
View(df_gii)
run_examples(fresh = TRUE, run = FALSE)
View(df_gii)
iots <- load_iots("WIOD2013", 2000:2001)
NAFTA <- c("USA", "MEX", "CAN")
BENELUX <- c("BEL", "NLD", "LUX")
regions <- countrycat(list(NAFTA, BENELUX), iots)
primary <- c("AtB", "C")
transport <- c("60", "61", "62", "63")
industries <- industrycat(list(primary, transport), iots)
iots <- on_iots(fvas, iots, regions = regions, industries = industries)
df_gii <- export_dataframe(c("fvas", rfvas, gfvas), iots
)
library(WIOD)
run_examples(fresh = TRUE, run = FALSE)
library(WIOD)
run_examples(fresh = TRUE, run = FALSE)
library(WIOD)
run_examples(fresh = TRUE, run = FALSE)
library(WIOD)
run_examples(fresh = TRUE, run = FALSE)
install.packages("WIOD", lib="G:/")
install.packages("WIOD", lib="G:/")
install.packages("wiod", lib="G:/")
install.packages("WIOD", lib="G:/")
library(WIOD)
detach("package:WIOD", unload = TRUE)
library(WIOD)
detach("package:WIOD", unload = TRUE)
library(WIOD)
install.packages("WIOD", repos="G:/")
install.packages("WIOD", repos="G:/")
library(WIOD)
install.packages("WIOD", repos = "G://")
install.packages("WIOD", repos = "G://")
install.packages("WIOD", repos="G:/")
install.packages("G:/WIOD.tar.gz", repos=NULL)
install.packages("G:/WIOD_0.1.tar.gz", repos=NULL)
install.packages("G:/WIOD_0.1.tar.gz")
install.packages("G:/WIOD_0.1.tar.gz", repos = NULL)
library(WIOD)
library(WIOD)
load_iots("WIOD2016")
library(WIOD)
dir_data2
WIOD::dir_data2
options()
library(WIOD)
dir_data2
WIOD::dir_store()
library(settings)
install.packagesdir_data2 <- "X:/Projects/WIOD Stata Command/R program/Data"()
install.packages("settings")
library(settings)
packrat::init(options = list(external.packages = c("settings")))
packrat::disable()
OPTION_DIR_DATA <- settings::options_manager(dir_data2 = "X:/Projects/WIOD Stata Command/R program/Data")
library(WIOD)
OPTIONS_DIR_DATA()
OPTIONS_DIR_DATA('dir_data2')
WIOD::OPTIONS_DIR_DATA('dir_data2')
library(WIOD)
data_directory
WIOD::data_directory
data_directory
WIOD::data_directory
force(leontief)
force(coefficient)
force(load_extra_iots)
library(WIOD)
force(fvas)
library(WIOD)
library(WIOD)
force(fvas)
force(fvas)
library(WIOD)
library(WIOD)
library(WIOD)
force(save_iots)
library(WIOD)
library(WIOD)
library(settings)
force(options_manager)
View(is_setting)
DIR_DATA <- options_manager(dir_data = "X:/Projects/WIOD Stata Command/R program/Data")
#' @import settings
#' @export
change_data_dir <- function(new_directory){
DIR_DATA(dir_data = new_directory)
}
DIR_DATA()
DIR_DATA$dir_data
DIR_DATA()$dir_data
WIOD.DIR_DATA <- options_manager(dir_data = "X:/Projects/WIOD Stata Command/R program/Data")
#' @import settings
#' @export
change_data_dir <- function(new_directory){
WIOD.DIR_DATA(dir_data = new_directory)
}
library(WIOD)
library(WIOD)
View(load_iot)
library(WIOD)
load_iot(WIOD2013, 2000)
load_iot("WIOD2013", 2000)
WIOD::dir_data <- "poep"
library(WIOD)
dir_data
WIOD::dir_data
library(WIOD)
load_iot("WIOD2013", 2005)
WIOD_DIR_DATA = "poep"
load_iot("WIOD2013", 2005)
library(WIOD)
my_env
my_env()
library(WIOD)
library(WIOD)
force(save_iots)
library(WIOD)
library(WIOD)
WIOD2016 <- load_iots("WIOD2016")
WIOD2016 <- on_iots(gii, WIOD2016)
library(WIOD)
WIOD2016 <- load_iots("WIOD2016")
WIOD2016 <- on_iots(WIOD2016, gii)
WIOD2016 <- on_iots(gii, WIOD2016)
save_iots(WIOD2016)
library(WIOD)
change_dir_data("D:/Werk/RUG/Data")
iot <- load_iot("WIOD2013")
iot <- load_iot("WIOD2013", 2000)
iot <- load_iot("WIOD2013", 2000)
iot <- load_iot("WIOD2013", "2000")
WIOD_PARAM$dir_data
change_dir_data("D:/Werk/RUG/Data")
iot <- load_iot("WIOD2013", "2000")
iot <- load_iot("WIOD2013", 2000)
iots <- load_iots("WIOD2013")
# Load the International Input Output Data from CSV files.
# For use in library WIOD
# Created by Sybren Deuzeman
# Maintained by GGDC
# First version: 3 May 2019
# Current Version: 11 june 2019
#' @title
#' Load a single International Input-Output Table.
#'
#' @description
#' Function loads a single internation Input-Output Table (IOT).
#'
#' @param version: version of IOT
#' @param year: year of IOT
#' @param directory: directory to where the input-output tables are stored.
#'
#' @details
#' Versions currently supported are WIOD2013 (World Input Output Database, version 2013),
#' WIOD2016 (World Input Output Database, version 2013)
#' and ICIOT2018 (Inter-Country Input Output Tables, version 2018).
#'
#' To load a time-series of international input-output tables use load_iots()
#'
#' Directory only needs to direct to the main storage directory, right version and year will be taken care of.
#' Default is loading via the internet. Users who use IOTs more often are advised to make a local copy.
#' Local copy of online data can be made via download_iots()
#'
#' @examples
#' \dontrun{Using online data:}
#' iot <- load_iot("WIOD2013", 2000)
#'
#' @examples
#' \dontrun{Using local data:
#' iot <- load_iot("WIOD2013", 2000, directory = "D:/Data")}
#'
#'
#' @export
load_iot <- function(version, year, directory = WIOD_PARAM$dir_data){
dir_file = paste(directory, "\\", version, "\\", version, year, ".rds", sep = "")
print(dir_file)
iot <- readRDS(dir_file)
return(iot)
}
iots <- load_iots("WIOD2013")
iot <- load_iot("WIOD2013", 2000)
change_dir_data("D:/Werk/RUG/Data")
iot <- load_iot("WIOD2013", 2000)
library(WIOD)
change_dir_data("D:/Werk/RUG/Data")
iot <- load_iot("WIOD2013", 2000)
View(load_iot)
View(load_iot)
iot <- load_iot("WIOD2013", 2000)
library(WIOD)
iot <- load_iot("WIOD2013", 2000)
iot <- load_iot("WIOD2013", 2000)
library(WIOD)
iot <- load_iot("WIOD2013", 2000)
change_dir_data("D:/Werk/RUG/Data")
iot <- load_iot("WIOD2013", 2000)
#' @import settings
WIOD_OPTIONS <- options_manager(dir_data = "X:/Projects/WIOD Stata Command/R program/Data")
#' @title
#' Change data directory
#'
#' @description
#' The function changes the directory from where the data is loaded
#'
#' @param newdirectory: the new directory from which to load the data
#'
#' @details
#' One can download the data using download_iots() and then use this function to change the directory with this function.
#' Manual change of the data directory is also possible when loading data.
#'
#' @examples
#' \dontrun{change_dir_data("X://data")}
#'
#' @export
#'@export
change_dir_data <- function(newdirectory){
print(WIOD_OPTIONS(dir_data))
WIOD_OPTIONS(dir_data = newdirectory)
print(WIOD_OPTIONS(dir_data))
}
WIOD_OPTIONS(dir_data)
library(settings)
install.package("settings")
install.packages("settings")
WIOD_OPTIONS <- options_manager(dir_data = "X:/Projects/WIOD Stata Command/R program/Data")
library(settings)
WIOD_OPTIONS <- options_manager(dir_data = "X:/Projects/WIOD Stata Command/R program/Data")
change_dir_data("D:/Werk/RUG/Data")
#' @import settings
WIOD_OPTIONS <- options_manager(dir_data = "X:/Projects/WIOD Stata Command/R program/Data")
#' @title
#' Change data directory
#'
#' @description
#' The function changes the directory from where the data is loaded
#'
#' @param newdirectory: the new directory from which to load the data
#'
#' @details
#' One can download the data using download_iots() and then use this function to change the directory with this function.
#' Manual change of the data directory is also possible when loading data.
#'
#' @examples
#' \dontrun{change_dir_data("X://data")}
#'
#' @export
#'@export
change_dir_data <- function(newdirectory){
print(WIOD_OPTIONS(dir_data))
WIOD_OPTIONS(dir_data = newdirectory)
print(WIOD_OPTIONS(dir_data))
}
change_dir_data("D:/Werk/RUG/Data")
#' @import settings
WIOD_OPTIONS <- options_manager(dir_data = "X:/Projects/WIOD Stata Command/R program/Data")
#' @title
#' Change data directory
#'
#' @description
#' The function changes the directory from where the data is loaded
#'
#' @param newdirectory: the new directory from which to load the data
#'
#' @details
#' One can download the data using download_iots() and then use this function to change the directory with this function.
#' Manual change of the data directory is also possible when loading data.
#'
#' @examples
#' \dontrun{change_dir_data("X://data")}
#'
#' @export
#'@export
change_dir_data <- function(newdirectory){
print(WIOD_OPTIONS(dir_data))
WIOD_OPTIONS('dir_data' = newdirectory)
print(WIOD_OPTIONS(dir_data))
}
change_dir_data("D:/Werk/RUG/Data")
#' @import settings
WIOD_OPTIONS <- options_manager(dir_data = "X:/Projects/WIOD Stata Command/R program/Data")
#' @title
#' Change data directory
#'
#' @description
#' The function changes the directory from where the data is loaded
#'
#' @param newdirectory: the new directory from which to load the data
#'
#' @details
#' One can download the data using download_iots() and then use this function to change the directory with this function.
#' Manual change of the data directory is also possible when loading data.
#'
#' @examples
#' \dontrun{change_dir_data("X://data")}
#'
#' @export
#'@export
change_dir_data <- function(newdirectory){
print(WIOD_OPTIONS$dir_data)
WIOD_OPTIONS("dir_data" = newdirectory)
print(WIOD_OPTIONS$dir_data)
}
change_dir_data("D:/Werk/RUG/Data")
#' @import settings
WIOD_OPTIONS <- options_manager(dir_data = "X:/Projects/WIOD Stata Command/R program/Data")
#' @title
#' Change data directory
#'
#' @description
#' The function changes the directory from where the data is loaded
#'
#' @param newdirectory: the new directory from which to load the data
#'
#' @details
#' One can download the data using download_iots() and then use this function to change the directory with this function.
#' Manual change of the data directory is also possible when loading data.
#'
#' @examples
#' \dontrun{change_dir_data("X://data")}
#'
#' @export
#'@export
change_dir_data <- function(newdirectory){
print(WIOD_OPTIONS("dir_data"))
WIOD_OPTIONS("dir_data" = newdirectory)
print(WIOD_OPTIONS("dir_data"))
}
change_dir_data("D:/Werk/RUG/Data")
library(WIOD)
change_dir_data("D:/Werk/RUG/Data")
iot <- load_iot("WIOD2013", 2000)
#' @import settings
paramEnv <- new.env()
assign('dir_data', "X:/Projects/WIOD Stata Command/R program/Data", envir = paramEnv)
#' @title
#' Change data directory
#'
#' @description
#' The function changes the directory from where the data is loaded
#'
#' @param newdirectory: the new directory from which to load the data
#'
#' @details
#' One can download the data using download_iots() and then use this function to change the directory with this function.
#' Manual change of the data directory is also possible when loading data.
#'
#' @examples
#' \dontrun{change_dir_data("X://data")}
#'
#' @export
#'@export
change_dir_data <- function(newdirectory){
print(get("dir_data", envir = paramEnv))
assign("dir_data", newdirectory, envir = paramEnv)
print(get("dir_data", envir = paramEnv))
}
change_dir_data("hallo")
iot <- load_iot("WIOD2013", 2000)
change_dir_data(D:/Werk/RUG/Data)
change_dir_data("D:/Werk/RUG/Data")
iot <- load_iot("WIOD2013", 2000)
WIOD::paramEnv$dir_data
library(WIOD)
WIOD::paramEnv$dir_data
WIOD::paramEnv
WIOD::paramEnv$dir_data
change_dir_data("D:/Werk/RUG/Data")
WIOD::paramEnv$dir_data
WIOD::paramEnv$dir_data <- "D:/Werk/RUG/Data"
assign("paramEnv", new.env(), envir = WIOD)
WIOD::paramEnv
llibrary(WIOD)
library(WIOD)
WIOD::dir_data
change_dir_data("D")
WIOD::dir_data
library(WIOD)
change_dir_data("D")
detach("package:settings", unload = TRUE)
library(WIOD)
library(WIOD)
force(change_dir_data)
force(dir_data)
library(WIOD)
force(change_dir_data)
cchange_dir_data("D")
change_dir_data("D")
WIOD::paramEnv$dir_data
iot <- load_iot("WIOD2013", 2000)
change_dir_data("D:/Werk/RUG/Data")
iot <- load_iot("WIOD2013", 2000)
change_dir_data("D:/Werk/RUG/Data")
iot <- load_iot("WIOD2013", 2000)
install.packages("devtools")
install.packages("roxygen")
install.packages("roxygen2")
install.packages("tidyr")
library(WIOD)
install.packages(WIOD, repos = "C:/Users/Sybren")
install.packages(WIOD_0.1.zip, repos = "C:/Users/Sybren")
install.packages("WIOD_0.1.zip", repos = "C:/Users/Sybren")
library(WIOD)
iots <- load_iots("WIOD2013")
change_dir_data("C:/Documents/Werk/RUG/Data")
iots <- load_iots("WIOD2013")
